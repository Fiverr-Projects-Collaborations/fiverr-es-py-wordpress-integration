{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 PROBLEM 1\
In the readme file you say:\
NOTE: File format to delete is given as in sample file RESTAURANT_v3_D.xlsx\
          No food item in the list means all foods to be deleted for the restaurant along with restaurant.\
          Otherwise specific food for restaurant is deleted only.\
\
We don't see any RESTAURANT_v3_D.xlsx file.\
\
\
PROBLEM 2\
We gave as requirement to have a new column called food_key in food file, in order to identify univocally the specific food. This is important to prevent and avoid mistake during the deletion process.\
In the file samples present in the folder archive we don't see anything like that. \
\
PROBLEM 3\
We gave as requirement to have a new column called skip_check in restaurant file, in order to force the inserting or update even if the check of the ETL would throw an error / warning.\
In the file samples present in the folder archive we don't see anything like that.\
\
PROBLEM 4\
I would have expected a more verbose LOG file saying which row are affected and which is the issue. Right now I kind of see the issue but no way to understand quickly to who they belong to.\
\
PROBLEM 5\
I would have expected a new column to decide if is an insert or an update (both in food than in restaurant file).\
The requirement was: "For ETL, we had a discussion. There might be scenarios where we may have to delete or update any existing data. And we agreed on including one new column which will act as flag, if we need to insert /update / delete."\
\
PROBLEM 6\
I see the ETL inserted 2 restaurant with the same \'93relationship_key\'94 and I didn\'92t even see error on the log file. This make me think that you didn\'92t implement any kind of check.\
\
****************************\
\
I remind you some of the requirements for Restaurants\
When there is an Insert row, the ETL should perform these checks:\
1) The ETL checks if the Relationship key already exist (this is what I said before):\
If it exists -> it throws an error \
if it does not exist -> it goes on with check 2\
\
2) The ETL checks if the Restaurant Title already exists:\
If it exists -> it throws an error (different from the first one of course) which tells me also info on the already existing restaurant (like its key, or maybe all its row)\
if it does not exist -> it goes on with check 3\
\
\
3) The ETL checks if the Address already exists:\
If it exists -> it throws an error (different from the other ones of course) which tells me also info on the already existing restaurant (like its key, or maybe all its row)\
if it does not exist -> it goes on with checks 4\
\
4) The ETL checks if the Telephone already exists:\
If it exists -> it throws an error (different from the other ones of course) which tells me also info on the already existing restaurant (like its key, or maybe all its row)\
if it does not exist -> it creates the CPT!\
\
\
This structure allow us to know when we are trying to insert some restaurant that already exist, or maybe a restaurant of the same brand which need a different title to differentiate.\
\
So what happens now?\
We will get the errors and think if we actually want to insert that row, or maybe change the title or something else.\
And we will be ready to trigger again the etl BUT this time, we want to skip the checks because maybe we want to insert the row even if it has same restaurant title and the etl will always throws error.\
\
SO I thought about this:\
Another column that, if it is flagged, it tells to etl to SKIP checks on that row\
\
\
\
\
}